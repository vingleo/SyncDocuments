FFMEPG 使用方法

官网地址  http://ffmpeg.org/ffmpeg.html  

#####################	音视频背景知识 ###############################

Part 0 音频
0.1 aac 和 fdk_aac
libfdk_aac介绍
作为一个轻度电影收藏爱好者，看过的电影都会丢到硬盘里放着，但是网络上有些电影资源并没有内嵌字幕，还需要外挂一个字幕，但是这样在保存的时候就需要保存两个文件，就令我很不爽，好在可以使用ffmpeg将字幕嵌入到视频文件中。

现在的大多电影都使用mkv格式，也有部分使用mp4，mkv格式本身支持字幕轨道，而mp4则需要调用mov_text编码器，在ffmpeg中可以很方便的将字幕和视频进行整合：

在我的硬盘内有一个名为movie.mkv的电影文件和一个名为sub.srt的字幕文件，在终端输入如下命令：
ffmpeg -i movie.mkv -i sub.srt -c:s copy -c:v copy -c:a copy output.mkv

等待程序运行完成后，得到了一个名为output.mkv的视频文件，打开播放后，并没有出现字幕，但是在播放器里可以看到一个字幕流，于是我使用ffprobe检查了这两个视频文件：

movie.mkv:
MycBook:Downloads simon$ ffprobe moive.mkv
Input #0, matroska,webm, from 'movie.mkv':
...
...
    Stream #0:0(eng): Video: h264 (High), yuv420p(progressive), 1920x1040, SAR 1:1 DAR 24:13, 23.98 fps, 23.98 tbr, 1k tbn, 47.95 tbc (default)
    Stream #0:1(fre): Audio: dts (DTS), 48000 Hz, 5.1(side), fltp, 1536 kb/s (default)
    Metadata:
      title           : DTS 5.1
    Stream #0:2(fre): Subtitle: subrip (default) (forced)
    Metadata:
      title           : Forced

output.mkv:
MycBook:Downloads simon$ ffprobe output.mkv
Input #0, matroska,webm, from 'output.mkv':
...
...
    Stream #0:1(fre): Audio: dts (DTS), 48000 Hz, 5.1(side), fltp, 1536 kb/s (default)
    Metadata:
      title           : DTS 5.1
      DURATION        : 01:33:20.681000000
    Stream #0:2(fre): Subtitle: subrip (default) (forced)
    Metadata:
      title           : Forced
      DURATION        : 00:10:53.068000000

原来是原来的视频有一个诡异的字幕流，只有10分钟，显然我在让ffmpeg自动选择时，程序自动选择了原视频中的字幕流，而我的字幕文件根本没有被加载。找到了问题，那就手动指定要抽取的字幕流好了，这时就需要用到-map参数：
ffmpeg -i movie.mkv -i sub.srt -map 0:v -map 0:a -map 1:s -c copy output.mkv 

其中movie.mkv的编号为#0，sub.srt的是#1，v代表视频流，a代表音频流，s则代表字幕流，程序会从#0中抽取视频流和音频流、从#1中抽取字幕流，复制到output.mkv中。
另外，最后的copy参数一定要加上，否则ffmpeg会对音视频流进行重新编码，将极大增加处理时间。

但是这时问题又出现了，在运行上述命令后，程序出现报错：
sub.srt: Invalid data found when processing input

使用less命令查看srt文件，原来是缺了一行，好在ffmpeg可以对字幕进行修复，执行命令：
ffmpeg -fix_sub_duration -i sub.srt sub2.srt

所有文件准备妥当，再重新进行合并，得到的output文件成功嵌入了字幕文件！
ffmpeg -i movie.mkv -i sub2.srt -map 0:v -map 0:a -map 1:s -c copy output.mkv 














1.	mmprobe - 查看媒体文件头信息
# ffprobe ~/Desktop/32037.mp3

高级选项
# ffprobe -show_format xxx.mp3

# ffprobe -print_format json -show_streams xxx.mp4 //输出json格式信息

# ffprobe -show_packets xxx.mp4    //查看包信息

# ffprobe -show_frame xxx.mp4 //查看帧信息


2.	mmplay - 播放工具
# ffplay xxx.mp3 

# ffplay xxx.mp4 -loop 10  //循环播放

# ffplay xxx.mp4 -ast 1 //音频
# ffplay xxx.mp4 -vst 1//视频


3.	ffmpeg - 音视频媒体文件处理工具
3.1合并音视频文件 (Remuxer)  
命令行格式：
ffmpeg -i audio.m4a -i video.mp4 

样例：
贴士：先定位到可执行文件目录，  处理文件的路径支持拖拽，注意文件名有空格需要单引号或者用转义表达 ，注意每个输入文件前都要加 -i ， 不转码用 -c:v ，注意视频放前面
# ./ffmpeg.exe -i '/e/360Downloads/超級簡單的流行抒情歌伴奏！ - DASH.mp4' -i '/e/360Downloads/超級簡單的流行抒情歌伴奏！ - DASH.aac' -c:v copy -c:a copy /e/360Downloads/output.mp4







横向合并视频
ffmpeg -i input1.mp4 -i input2.mp4 -lavfi hstack output.mp4

上面的命令虽然可以合并视频，两个视频可以正常播放，但是只保留了前面一个的音频。
下面会介绍怎么避开这个坑。

注意这时候input1和input2必须同样的高度，如果不一样的高度可以使用-shortest参数来保证同样的高度。

如果希望合并多个视频，可以使用下面命令行。
ffmpeg -i input1.mp4 -i input2.mp4 -i input3.mp4 -lavfi hstack=inputs=3 output.mp4
其中input=3表示希望合并的视频的个数
纵向合并视频

ffmpeg -i input1.mp4 -i input2.mp4 -lavfi vstack output.mp4
网格合并视频

当多个视频时，还可以合并成网格状，比如2x2，3x3这种。但是视频个数不一定需要是偶数，如果是奇数，可以用黑色图片来占位。

ffmpeg -f lavfi -i color=c=black:s=1280x720 -vframes 1 black.png
该命令将创建一张1280*720的图片

然后就可以使用下面这个命令来合并成网格视频了，如果只有三个视频，可以选择上面创建的黑色图片替代。
ffmpeg -i top_left.mp4 -i top_right.mp4 -i bottom_left.mp4 -i bottom_right.mp4 \
-lavfi "[0:v][1:v]hstack[top];[2:v][3:v]hstack[bottom];[top][bottom]vstack"
-shortest 2by2grid.mp4

上面创建的是正规的2x2网格视频。想象一下，现在只有三个视频，我想把第一个视频摆放在第一行的中间，然后把第二、三个视频摆放在第二行。那么就可以使用下面两个命令了。

ffmpeg -f lavfi -i color=c=black:s=640x720 -vframes 1 black.png

ffmpeg -i black.png -i top_center.mp4 -i bottom_left.mp4 -i bottom_right.mp4
-lavfi "[0:v][1:v][0:v]hstack=inputs=3[top];[2:v][3:v]hstack[bottom];[top][bottom]vstack"
-shortest 3_videos_2x2_grid.mp4
合并音频和视频

ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac -strict experimental output.mp4

如果视频中已经包含了音频，这个时候还可以替换视频中的音频，使用下面命令行。
ffmpeg -i video.mp4 -i audio.wav -c:v copy -c:a aac -strict experimental
-map 0:v:0 -map 1:a:0 output.mp4
合并两个音频

ffmpeg -i input1.mp3 -i input2.mp3 -filter_complex amerge -ac 2 -c:a libmp3lame -q:a 4 output.mp3
获取视频中的音频

ffmpeg -i input.mp4 -vn -y -acodec copy output.m4a
去掉视频中的音频

ffmpeg -i input.mp4 -an output.mp4

现在介绍，怎么合并两个视频并保留两个视频中的音频。也就是抖音中的合拍功能。
1.合并两个视频，但是发现只有一个声音。无所谓。
2.抽取两个视频中的音频，然后合并成一个音频。
3.将这个音频替换到之前的合并视频中。
4.ok了。
5.可以使用ffplay播放了。




将avi转码为 mp4 （视频编码分别为x264和x265，音频编码都为aac，使用不同的库）

ffmpeg -i .input.avi -c:a aac -c:v libx265 -crf 18 -preset medium -pix_fmt yuv420p10le -tag:v hvc1 output_10bit.mp4
ffmpeg -i .input.avi -c:a aac -c:v libx264 -crf 20 -preset slow  output_10bit.mp4
ffmpeg -i .input.avi -c:a libfdk_aac -c:v libx264 -crf 20 -preset slow  output_10bit.mp4

将文件mpeg2 编码视频转码为x265并将 AC3 6声道保留为6声道 aac 
ffmpeg -i  input.mkv -c:a aac -c:v libx265 -crf 18 -preset medium -pix_fmt yuv420p10le -tag:v hvc1 output_10bit.mp4
将文件mpeg2 编码视频转码为x265并将 AC3 6声道保留为2声道 aac 
ffmpeg -i  input.mkv -c:a aac  -ac 2 -c:v libx265 -crf 18 -preset medium -pix_fmt yuv420p10le -tag:v hvc1 output_10bit.mp4

将原视频6声道aac转为立体声
 ffmpeg -i input.mp4 -c:v copy -ac 2 output.mp4


将字幕合并进mp4中
ffmpeg -i  .mp4  -i ssa -c:s mov_text -c:v  copy -c:a copy  output.mp4
将字幕合并进mkv中
ffmpeg -i infile.mkv -i infile.srt -c copy -c:s srt outfile.mkv

##########################	以下为拓展说明	################################
使用ffmpeg为视频嵌入字幕
作为一个轻度电影收藏爱好者，看过的电影都会丢到硬盘里放着，但是网络上有些电影资源并没有内嵌字幕，还需要外挂一个字幕，但是这样在保存的时候就需要保存两个文件，就令我很不爽，好在可以使用ffmpeg将字幕嵌入到视频文件中。

现在的大多电影都使用mkv格式，也有部分使用mp4，mkv格式本身支持字幕轨道，而mp4则需要调用mov_text编码器，在ffmpeg中可以很方便的将字幕和视频进行整合：

在我的硬盘内有一个名为movie.mkv的电影文件和一个名为sub.srt的字幕文件，在终端输入如下命令：
ffmpeg -i movie.mkv -i sub.srt -c:s copy -c:v copy -c:a copy output.mkv

等待程序运行完成后，得到了一个名为output.mkv的视频文件，打开播放后，并没有出现字幕，但是在播放器里可以看到一个字幕流，于是我使用ffprobe检查了这两个视频文件：

movie.mkv:
MycBook:Downloads simon$ ffprobe moive.mkv
Input #0, matroska,webm, from 'movie.mkv':
...
...额， 
    Stream #0:0(eng): Video: h264 (High), yuv420p(progressive), 1920x1040, SAR 1:1 DAR 24:13, 23.98 fps, 23.98 tbr, 1k tbn, 47.95 tbc (default)
    Stream #0:1(fre): Audio: dts (DTS), 48000 Hz, 5.1(side), fltp, 1536 kb/s (default)
    Metadata:
      title           : DTS 5.1
    Stream #0:2(fre): Subtitle: subrip (default) (forced)
    Metadata:
      title           : Forced

output.mkv:
MycBook:Downloads simon$ ffprobe output.mkv
Input #0, matroska,webm, from 'output.mkv':
...
...
    Stream #0:1(fre): Audio: dts (DTS), 48000 Hz, 5.1(side), fltp, 1536 kb/s (default)
    Metadata:
      title           : DTS 5.1
      DURATION        : 01:33:20.681000000
    Stream #0:2(fre): Subtitle: subrip (default) (forced)
    Metadata:
      title           : Forced
      DURATION        : 00:10:53.068000000

原来是原来的视频有一个诡异的字幕流，只有10分钟，显然我在让ffmpeg自动选择时，程序自动选择了原视频中的字幕流，而我的字幕文件根本没有被加载。找到了问题，那就手动指定要抽取的字幕流好了，这时就需要用到-map参数：
ffmpeg -i movie.mkv -i sub.srt -map 0:v -map 0:a -map 1:s -c copy output.mkv 

其中movie.mkv的编号为#0，sub.srt的是#1，v代表视频流，a代表音频流，s则代表字幕流，程序会从#0中抽取视频流和音频流、从#1中抽取字幕流，复制到output.mkv中。
另外，最后的copy参数一定要加上，否则ffmpeg会对音视频流进行重新编码，将极大增加处理时间。

但是这时问题又出现了，在运行上述命令后，程序出现报错：
sub.srt: Invalid data found when processing input

使用less命令查看srt文件，原来是缺了一行，好在ffmpeg可以对字幕进行修复，执行命令：
ffmpeg -fix_sub_duration -i sub.srt sub2.srt

所有文件准备妥当，再重新进行合并，得到的output文件成功嵌入了字幕文件！
ffmpeg -i movie.mkv -i sub2.srt -map 0:v -map 0:a -map 1:s -c copy output.mkv 



**********************************************************************************************************************************


4. ffserver



pod install  

换清华的国内源

不用vpn，直接避开高峰时段，在 每天早上执行命令  可以达到 满速



h.265 HEVC 10bit 4k  HDR-High Dynamic Range 












ffmpeg-20191219-99f505d-win64-static\bin>ffmpeg.exe -i D:\工作内容\要看的电子书\日语Japanese\标日视频\标日第08课(ED2000.COM).wmv -c:a aac -c:v libx265 -crf 18 -preset medium -pix_fmt yuv420p10le -tag:v hvc1 D:\工作内容\要看的电子书\日语Japanese\标日视频\标日第08课10bit.mp4

文件大小对比
AVI WMV9 + MP3 240,828,416
MP4 X264 + AAC 161,052,151


ffmpeg修复视频

iOS平台，有时候视频不能播放，需要ffmpeg修复一下

    安装ffmpeg
    Windows安装方法：https://blog.csdn.net/yy3097/article/details/51063950
    Mac安装方法：https://www.jianshu.com/p/627b2d462151

    修复mp4命令
    打开一个终端，cd到mp4的目录，运行命令(before.mp4是需要修复的视频文件，after.mp4是修复后保存的视频文件)
    ffmpeg -i before.mp4 -codec copy after.mp4

    这下就可以播放了






