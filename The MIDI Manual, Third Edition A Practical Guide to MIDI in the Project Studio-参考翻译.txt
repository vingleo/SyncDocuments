
*************************************************
Foreword
The most amazing aspect of the book you’re holding in your hands is that it talks about a tech- nological subject that, while more than a decade and a half old, is still vital, growing, and rele- vant. Think back to other artifacts from the same era as MIDI’S early days: Is anyone still writing books about the Commodore 64, the joys of telecommunicating with 300-baud modems, getting the most out of a Mac Plus, or how to organize data on your 20-megabyte hard drive=

Of course not. Technology has a certain ruthlessness; in the rush toward the new, the old is forgotten—cast away as an embarrassing reminder of what we once were.

But this hasn’t happened with MIDI. Far from disappearing, MIDI has lived long and pros- pered. Once used by only a handful of computer-literate musicians, MIDI is now commonplace in computers around the world. It has become “the new sheet music,” but for computer media rather than the printed page.

What accounts for MIDI’s stubborn refusal not to yield to something new and different, and even evolve to newer heights= Part of the reason is that MIDI was born to good parents. Virtually every music-related hardware and software manufacturer in the early 1980s worked together to hammer out a standard: Americans, Japanese, and Europeans debated, refined, and tested until they had forged a truly worldwide phenomenon. They had the good sense to make MIDI inex- pensive enough that there was no reason not to include it as part of musical hardware, which cre- ated the volume that made it worthwhile for other companies to develop MIDI-compatible widgets.

MIDI was also powerful and useful enough that it served a wide range of musical needs. But the story would have ended there if not for the MIDI Manufacturers Association, the “guardians” of the MIDI spec. Periodically, this organization drafts new proposals that take MIDI to another level. In the years since MIDI’S inception, it has become part of studio recording, post-production, video games, lighting control, Broadway shows, the Internet, and much more. All of these improve- ments have been done in an orderly, consensus-oriented fashion that has guaranteed the spec’s universality and effectiveness.

Which brings us to this book. MIDI’s evolution has meant that there has been a continuing need for books that explore this evolution. David Huber is an excellent guide to this world. He loves music, technology, and people, which puts him in a good position to communicate about tech- nology to those who want to learn more about this “MIDI thing.” Of course, The MIDI Manual includes info on MIDI basics, but more importantly, it discusses the many updates and enhance- ments that have occurred during the past 20= years. While it’s a fine place for beginners to get an overview, what’s special about The MIDI Manual is that it’s also “continuing education” for those who want to remain current about MIDI, and get a glimpse of where it’s going to be head- ing in the future.

So sit back, relax, put on a background CD (which, odds are, had MIDI involved somewhere in its production), and find out more about the marvelous world of MIDI. Like a truly fine wine, it doesn’t get older—it just gets better.
—Craig Anderton

前言

您手中这本书最令人惊奇的地方在于，它谈论的是一个技术主题，尽管已有十五年历史，但仍然至关重要、不断发展且具有现实意义。回想一下 MIDI 早期同一时代的其他文物：还有人在写有关 Commodore 64、使用 300 波特调制解调器进行通信的乐趣、充分利用 Mac Plus 或如何在 20 兆字节硬盘上组织数据的书吗？

当然没有。技术有一定的无情性；在追求新事物的浪潮中，旧事物被遗忘——被抛弃，成为我们曾经的尴尬回忆。

但 MIDI 并没有发生这种情况。MIDI 不仅没有消失，而且存在了很长时间并蓬勃发展。MIDI 曾经只被少数精通计算机的音乐家使用，现在已在世界各地的计算机中很常见。它已成为“新乐谱”，但用于计算机媒体而非印刷页面。

MIDI 为何顽固地拒绝向新事物屈服，甚至发展到新的高度？部分原因是 MIDI 诞生于一个好父母。20 世纪 80 年代初，几乎所有与音乐相关的硬件和软件制造商都共同努力制定了一项标准：美国、日本和欧洲人经过辩论、改进和测试，直到他们打造出一种真正全球性的现象。他们明智地让 MIDI 变得足够便宜，以至于没有理由不将其作为音乐硬件的一部分，这创造了数量，使其他公司值得开发与 MIDI 兼容的小部件。

MIDI 还非常强大和有用，可以满足广泛的音乐需求。但如果不是 MIDI 制造商协会（MIDI 规范的“守护者”），这个故事就会到此结束。该组织定期起草新的提案，将 MIDI 提升到另一个层次。自 MIDI 诞生以来，它已成为录音棚录音、后期制作、视频游戏、灯光控制、百老汇演出、互联网等的一部分。所有这些改进都是以有序、以共识为导向的方式进行的，从而保证了该规范的普遍性和有效性。

这让我们想到了这本书。MIDI 的演变意味着需要不断出版探索这一演变的书籍。David Huber 是这个世界的优秀向导。他热爱音乐、技术和人，这使他能够很好地向那些想要了解更多有关“MIDI 事物”的人传达技术信息。当然，《MIDI 手册》包含有关 MIDI 基础知识的信息，但更重要的是，它讨论了过去 20 年发生的许多更新和增强。虽然《MIDI 手册》是初学者了解 MIDI 概况的好地方，但它的特别之处在于，对于那些想要了解 MIDI 最新动态并了解其未来发展方向的人来说，它也是“继续教育”。

所以，坐下来，放松一下，放上一张背景 CD（很可能在制作过程中涉及到 MIDI），了解更多关于 MIDI 的奇妙世界。就像一瓶真正优质的葡萄酒，它不会变老，只会变得更好。
—Craig Anderton

*************************************************
1 What Is MIDI=

Simply stated, Musical Instrument Digital Interface (MIDI) is a digital communications language and compatible specification that allows multiple hardware and software electronic instruments, performance controllers, computers, and other related devices to communicate with each other over a connected network (Figure 1.1). MIDI is used to translate performance- or control-related events (such as playing a keyboard, selecting a patch number, varying a modulation wheel, trigger- ing a staged visual effect, etc.) into equivalent digital messages and then transmit these messages to other MIDI devices where they can be used to control sound generators and other performance parameters. The beauty of MIDI is that its data can be recorded into a hardware device or software program (known as a sequencer), where it can be edited and transmitted to electronic instruments or other devices to create music or control any number of parameters.

In artistic terms, this digital language is an important medium that lets artists express themselves with a degree of flexibility and control that, before its inception, wasn’t possible on an individual level. Through the transmission of this performance language, an electronic musician can create and develop a song or composition in a practical, flexible, affordable, and fun production environment.

Figure 1.1. Example of a typical MIDI system with the MIDI network connections.

In addition to composing and performing a song, musicians can also act as techno-conductors, having complete control over a wide palette of sounds, their timbre (sound and tonal quality), overall blend (level, panning), and other real-time controls. MIDI can also be used to vary the perform- ance and control parameters of electronic instruments, recording devices, control devices, and sig- nal processors in the studio, on the road, or on the stage.

The term “interface” refers to the actual data communications link and software/hardware systems in a connected MIDI network. Through the use of MIDI, it is possible for all of the electronic instruments and devices within a network to be addressed through the transmission of real-time performance and control-related MIDI data messages throughout a system to multiple instru- ments and devices through a single data line (which can be chained from device to device). This is possible because a single data cable is capable of transmitting performance and control messages over 16 discrete channels. This simple fact allows electronic musicians to record, overdub, mix, and play back their performances in a working environment that loosely resembles the multitrack recording process. Once mastered, MIDI surpasses this analogy by allowing a composition to be edited, controlled, altered, and called up with complete automation and repeatability—providing production challenges and possibilities that are well beyond the capabilities of the traditional tape- based multitrack recording process.

Figure 1.2. Example of a typical MIDI system with the audio connections.

*************************************************
1 什么是 MIDI？

简而言之，乐器数字接口 (MIDI) 是一种数字通信语言和兼容规范，允许多个硬件和软件电子乐器、性能控制器、计算机和其他相关设备通过连接的网络相互通信（图 1.1）。MIDI 用于将与性能或控制相关的事件（例如弹奏键盘、选择补丁号、改变调制轮、触发分阶段的视觉效果等）转换为等效的数字消息，然后将这些消息传输到其他 MIDI 设备，在那里它们可用于控制声音发生器和其他性能参数。MIDI 的美妙之处在于，它的数据可以记录到硬件设备或软件程序（称为音序器）中，在那里可以对其进行编辑并传输到电子乐器或其他设备以创作音乐或控制任意数量的参数。

从艺术角度来看，这种数字语言是一种重要的媒介，它让艺术家能够以一定的灵活性和控制力表达自己，而在其诞生之前，这在个人层面上是不可能的。通过传输这种演奏语言，电子音乐家可以在实用、灵活、经济实惠且充满乐趣的制作环境中创作和开发歌曲或作品。

图 1.1。具有 MIDI 网络连接的典型 MIDI 系统示例。

除了创作和演奏歌曲外，音乐家还可以充当技术指挥，完全控制各种声音、音色（声音和音调质量）、整体混合（音量、声像）和其他实时控制。MIDI 还可用于改变录音室、路上或舞台上的电子乐器、录音设备、控制设备和信号处理器的性能和控制参数。

术语“接口”是指连接的 MIDI 网络中的实际数据通信链路和软件/硬件系统。通过使用 MIDI，可以通过一条数据线（可从一个设备链接到另一个设备）将实时演奏和控制相关的 MIDI 数据信息传输到整个系统中的多个乐器和设备，从而解决网络中的所有电子乐器和设备的问题。这是因为一条数据线能够通过 16 个离散通道传输演奏和控制信息。这个简单的事实使电子音乐家能够在与多轨录音过程大致相似的工作环境中录制、配音、混音和播放他们的演奏。一旦掌握，MIDI 就超越了这种类比，允许以完全自动化和可重复的方式编辑、控制、更改和调用乐曲——提供的制作挑战和可能性远远超出了传统基于磁带的多轨录音过程的能力。

图 1.2。带有音频连接的典型 MIDI 系统示例。

####
What MIDI Isn’t
For starters, let’s dispel one of MIDI’s greatest myths: MIDI does not communicate audio nor can it cre- ate sounds! It is a digital language that instructs a device or program to create, playback, or alter sounds.

MIDI is a data protocol that communicates on/off triggering and a wide range of parameters to instruct an instrument or device to generate, reproduce, or control audio or production-related func- tions. Because of these differences, the MIDI data path and the audio routing paths are entirely sepa- rate from each another (Figure 1.2). Even if they digitally share the same transmission cable (such as through FireWire™ or USB), the actual data paths and formats are completely separate.

In short, MIDI communicates information that instructs an instrument to play or a device to carry out a function. It can be thought of as the dots on a player-piano roll—when we put the paper roll up to our ears, we hear nothing. When the cut-out dots pass over the sensors on a player piano, the instrument itself begins to make beautiful music. It’s exactly the same with MIDI.

A MIDI file or data stream is simply a set of instructions that pass down a wire in a serial fashion, but when an electronic instrument interprets the data we begin to hear sound.

####
MIDI 不是什么
首先，让我们来消除 MIDI 最大的误解之一：MIDI 不传递音频，也不能创建声音！它是一种数字语言，可以指示设备或程序创建、播放或改变声音。

MIDI 是一种数据协议，可以传递开/关触发和各种参数，以指示乐器或设备生成、再现或控制音频或与制作相关的功能。由于这些差异，MIDI 数据路径和音频路由路径完全彼此独立（图 1.2）。即使它们在数字上共享相同的传输电缆（例如通过 FireWire™ 或 USB），实际的数据路径和格式也完全独立。

简而言之，MIDI 传递指示乐器演奏或设备执行功能的信息。它可以被认为是自动钢琴卷轴上的点 - 当我们将纸卷放在耳边时，我们什么也听不到。当切出的点经过自动钢琴上的传感器时，乐器本身就开始演奏美妙的音乐。这与 MIDI 完全相同。

MIDI 文件或数据流只是一组以串行方式通过电线传递的指令，但当电子乐器解释数据时，我们就开始听到声音。

####
A Brief History
In the early days of electronic music, keyboard synthesizers were commonly monophonic devices (capable of sounding only one note at a time) and often generated a thin sound quality. These lim- iting factors caused early manufacturers to look for ways to combine instruments together to create a thicker, richer sound texture. This was originally accomplished by establishing an instrument link that would allow a synthesizer (acting as a master controller) to directly control the performance parameters of one or more synthesizers (known as slave sound modules). As a result of these links, a basic control signal (known as control voltage, or CV) was developed (Figure 1.3).

This simple yet problematic system was based on the fact that when most early keyboards were played, they generated a DC voltage that could directly control another instrument’s voltage- controlled oscillators (which affected the pitch of a sounding note) and voltage-controlled ampli- fiers (which affected the note’s volume and on/off nature). Since many keyboards of the day generated a DC signal that ascended at a rate of 1 volt per octave (breaking each musical octave into 1/12-volt intervals), it was possible to use this standard control voltage as a master-reference signal for transmitting pitch information to other synths. In addition to a control voltage, this  standard required that a keyboard transmit a gate signal. This second signal was used to syn- chronize the beginning and duration times of each note. With the appearance of more advanced polyphonic synthesizers (which could generate more than one note at a time) and early digital devices, it was clear that this standard would no longer be the answer to system-wide control, and new standards began to appear on the scene (thereby creating the fun of having incompatible control standards). With the arrival of early drum machines and sequencing devices, standardi- zation became even more of a dilemma.

####
简史
在电子音乐的早期，键盘合成器通常是单声道设备（一次只能发出一个音符），并且通常产生的声音质量较薄。这些限制因素导致早期制造商寻找将乐器组合在一起以创造更厚重、更丰富的声音质感的方法。这最初是通过建立乐器链接来实现的，该链接允许合成器（充当主控制器）直接控制一个或多个合成器（称为从属声音模块）的性能参数。由于这些链接，开发了一种基本的控制信号（称为控制电压或 CV）（图 1.3）。

这个简单但有问题的系统基于这样一个事实：当演奏大多数早期键盘时，它们会产生直流电压，该电压可以直接控制另一个乐器的压控振荡器（影响发声音符的音高）和压控放大器（影响音符的音量和开/关特性）。因为当时许多键盘都能产生以每八度 1 伏特的速率上升的直流信号（将每个音乐八度分为 1/12 伏特的间隔），所以可以使用此标准控制电压作为主参考信号，以将音高信息传输到其他合成器。除了控制电压之外，此标准还要求键盘传输门信号。第二个信号用于同步每个音符的开始和持续时间。随着更先进的复音合成器（可以一次生成多个音符）和早期数字设备的出现，很明显此标准不再是系统范围控制的答案，并且新的标准开始出现（从而创造了拥有不兼容控制标准的乐趣）。随着早期鼓机和音序设备的出现，标准化变得更加困难。

Figure 1.3. The late, great synth pioneer Bob Moog, who was outstanding in his field.
(Photograph courtesy of Roger Luther; www.moogarchives.com.)

图 1.3。已故的伟大合成器先驱 Bob Moog，他在其领域中表现突出。
（照片由 Roger Luther 提供；www.moogarchives.com。）

Synchronization between these early devices was also problematic, as manufacturers would often standardize on different sync-pulse clock rates. Synchronizing incompatible systems could be extremely difficult, because they would lose sync over a very short period of time, rendering sync nearly impossible without additional sync-rate converters or other types of modifications. Because of this mess, Dave Smith and Chet Wood (then of Sequential Circuits, a now-defunct manufac- turer of electronic instruments) began creating a digital electronic instrument protocol, which was named the Universal Synthesizer Interface (USI). As a result of this early protocol, equipment from different manufacturers could finally communicate directly (e.g., a synth from one company finally worked with another company’s sequencer). In the fall of 1981, USI was proposed to the Audio Engineering Society. During the following two years, a panel (which included representatives from the major electronic instrument manufacturers) modified this standard and adopted it under the name of Musical Instrument Digital Interface (MIDI Specification 1.0).

这些早期设备之间的同步也存在问题，因为制造商通常会采用不同的同步脉冲时钟速率作为标准。同步不兼容的系统可能极其困难，因为它们会在很短的时间内失去同步，如果不使用额外的同步速率转换器或其他类型的修改，同步几乎是不可能的。由于这种混乱，Dave Smith 和 Chet Wood（当时在 Sequential Circuits 公司工作，该公司是一家现已倒闭的电子乐器制造商）开始创建数字电子乐器协议，该协议被命名为通用合成器接口 (USI)。由于这一早期协议，不同制造商的设备终于可以直接通信（例如，一家公司的合成器终于可以与另一家公司的音序器配合使用）。1981 年秋天，USI 被提交给音频工程协会。在接下来的两年里，一个小组（包括来自主要电子乐器制造商的代表）修改了该标准，并将其命名为乐器数字接口（MIDI 规范 1.0）。

The strong acceptance of MIDI was largely due to the need for a standardized protocol and fast- paced advances in technology that allowed complex circuit chips and hardware designs to be manufactured cost effectively. It was also due, in part, to the introduction of Yamaha’s popular DX-7 synthesizer in the winter of 1983, after which time keyboard sales began to grow at an astonishing rate.

MIDI 的广泛接受主要归功于标准化协议的需求以及快速发展的技术，这使得复杂的电路芯片和硬件设计能够以低成本制造。此外，部分原因是雅马哈于 1983 年冬季推出了广受欢迎的 DX-7 合成器，此后键盘的销量开始以惊人的速度增长。

With the adoption of this industry-wide standard, any device that incorporated MIDI into its design could transmit or respond to digital performance and control-related data conforming to the MIDI 1.0 specification. For the first time, any new device that conformed to the MIDI spec would integrate into an existing MIDI system and actually work … without any muss or fuss.

随着这一行业标准的采用，任何将 MIDI 融入其设计的设备都可以传输或响应符合 MIDI 1.0 规范的数字演奏和控制相关数据。这是第一次，任何符合 MIDI 规范的新设备都可以集成到现有的 MIDI 系统中并真正发挥作用……没有任何麻烦或麻烦。

Over the course of time, new instruments came onto the market that offered improved sound and functional capabilities that led to the beginnings of software sound generators, samplers, and effects devices. With the eventual maturation of software instruments and systems that could emulate existing devices or create entirely an entirely new range of functions and sound, hard- ware controllers began to quickly spring onto the scene that made use of MIDI to communicate physical control movements into analogous moves in a program or plug-in software interface. In fact, this explosion of software emulation and control has breathed a new degree of life into the common, everyday use of MIDI.

随着时间的推移，市场上出现了新的乐器，它们提供了更好的声音和功能，从而催生了软件声音发生器、采样器和效果设备的出现。随着软件乐器和系统的最终成熟，它们可以模拟现有设备或创建全新的功能和声音，硬件控制器开始迅速涌现，它们利用 MIDI 将物理控制动作传达为程序或插件软件界面中的类似动作。事实上，软件模拟和控制的爆炸式增长为 MIDI 的日常使用注入了新的活力。

####
Why Is MIDI=
Before MIDI, it was pretty much necessary to perform a musical passage in real time. Of course,
there are a few exceptions to this statement. In earlier days, music could be created and re-created though the mechanical triggering of a musical device (music boxes and the aforementioned player piano come to mind). When tape-based recording came along in the middle part of the last cen- tury, it became possible to edit two or more problematic performances together into a single, good take. However, when it came to the encoding of a musical passage and then faithfully play- ing it back—while still being able to edit or alter the tempo, notes, and control variables of a performance—we were pretty much back in the horse-and-buggy days.

With the introduction of electronic music production and MIDI, a musical performance could be captured in the digital domain and then faithfully played back in a production-type environment that mimicked the traditional form and functions of multitrack recording. Basic tracks could be recorded one at a time, allowing a composition to be built up using various electronic instruments.

But, here’s the kicker: MIDI finally made it possible for a performance track to be edited, layered, altered, spindled, mutilated, and improved with relative ease and under completely automated computer control. If you played a bad note, fix it. If you want to change the key or tempo of a piece, change it. If you want to change the expressive volume of a phrase in a song, just do it! Even its sonic character (timbre) can be changed! These capabilities just hint at the power of MIDI!

This affordable potential for future expansion and increased control throughout an integrated production system has spawned the growth of an industry that’s also very personal in nature. For the first time in music history, it is possible for an individual to cost-effectively realize a full-scale sound production on his or her own time. Because MIDI is a real-time performance medium, it is also possible to listen to and edit a production at every stage of its development, all within the comfort of one’s own home or personal project studio.

I’d also like to address another issue that has sprung up around MIDI and electronic music pro- duction. With the introduction of drum machines, modern-day synths, samplers, and powerful hardware or software instruments, it is not only possible but also relatively easy to build up a composition using instrument voices that closely mimic virtually any instrument that can be imagined. In the early days, studio musicians spoke out against MIDI, saying that it would be the robot that would make them obsolete. Although there was a bit of truth to this, these same musicians are now using the power of MIDI to expand their own musical palate and create pro- ductions of their own. Today, MIDI is being used by many professional and nonprofessional musicians alike to perform an expanding range of production tasks, including music production, audio-for-video and film postproduction, and stage production. Such is progress.

####
为什么是 MIDI？
在 MIDI 出现之前，实时演奏一段音乐几乎是必要的。当然，
这种说法也有一些例外。在早期，音乐可以通过音乐设备的机械触发来创作和重现（音乐盒和前面提到的自动钢琴就浮现在脑海中）。当上世纪中叶磁带录音出现时，人们可以将两个或多个有问题的表演剪辑成一个单一的、好的片段。然而，当涉及到对一段音乐进行编码，然后忠实地播放它时——同时仍然能够编辑或改变表演的节奏、音符和控制变量——我们几乎回到了马车时代。

随着电子音乐制作和 MIDI 的引入，音乐表演可以在数字领域中被捕捉，然后在模仿多轨录音的传统形式和功能的制作环境中忠实地播放。基本音轨可以一次录制一个，这样就可以使用各种电子乐器创作乐曲。

但关键在于：MIDI 终于使表演音轨能够相对轻松地在完全自动化的计算机控制下进行编辑、分层、修改、旋转、分割和改进。如果您弹奏了一个错误的音符，请对其进行修改。如果您想改变乐曲的调或节奏，请对其进行更改。如果您想改变歌曲中某个乐句的表达音量，请直接更改！甚至可以更改其声音特征（音色）！这些功能都暗示了 MIDI 的强大功能！

这种未来扩展的可承受潜力以及对整个集成制作系统的增强控制催生了一个本质上非常个性化的行业的发展。在音乐史上，这是第一次，个人可以在自己的时间内以经济高效的方式实现全面的声音制作。由于 MIDI 是一种实时演奏媒介，因此人们还可以在作品开发的每个阶段收听和编辑作品，这一切都可以在自己家中或个人项目工作室中完成。

我还想谈谈 MIDI 和电子音乐制作中出现的另一个问题。随着鼓机、现代合成器、采样器和强大的硬件或软件乐器的推出，使用乐器声音创作作品不仅可能，而且相对容易，这些乐器声音可以紧密模仿几乎任何可以想象到的乐器。早期，录音室音乐家反对 MIDI，称机器人会取代他们。虽然这话有一定道理，但这些音乐家现在正在利用 MIDI 的力量来扩展自己的音乐品味，创作自己的作品。如今，许多专业和非专业音乐家都在使用 MIDI 来执行越来越多的制作任务，包括音乐制作、视频音频和电影后期制作以及舞台制作。这就是进步。

####
MIDI in the Home
A vast number of electronic musical instruments, effects devices, computer systems, and other MIDI-related devices are currently available on the new and used electronic music market. This diversity lets us select the type of production system that best suits our own particular musical taste and production style. With the introduction of the large-scale integrated circuit chip (which allows complex circuitry to be quickly and easily mass produced), many of the devices that make up an electronic music system are affordable for almost every musician or composer, whether he or she is a working professional, aspiring artist, or beginning hobbyist (Figure 1.4).

One of the greatest benefits of a project or portable production system centers around the idea that an artist can select from a wide range of tools and toys to generate specific sounds—or to get the particular sounds that he or she likes. This technology is often extremely powerful, as the components combine to create a vast palette of sounds and handle a wide range of task-specific functions. Such a system might include one or more keyboard synthesizers, synth modules, sam- plers, drum machines, a computer (with a digital audio workstation and sequencing package), effects devices, and audio mixing capabilities.

Figure 1.4. Gettin’ it all going in the bedroom studio. (Photograph courtesy of Yamaha Corporation of America;www.yamaha.com.)

Systems like these are constantly being installed in the homes of working and aspiring musicians.
Their size can range from taking up a corner of an artist’s bedroom to being a larger system that’s been installed in a dedicated project studio. All of these system types can be designed to handle a wide range of applications and have the important advantage of letting the artist produce his or her music in a comfortable environment whenever the creative mood hits. Such production luxuries, which would have literally cost an artist a fortune twenty years ago, are now within the reach of almost every working and aspiring musician.

####
家庭中的 MIDI
目前，新旧电子音乐市场上有大量电子乐器、效果设备、计算机系统和其他 MIDI 相关设备。这种多样性使我们能够选择最适合我们自己的音乐品味和制作风格的制作系统类型。随着大规模集成电路芯片（允许快速轻松地批量生产复杂电路）的推出，构成电子音乐系统的许多设备几乎每个音乐家或作曲家都负担得起，无论他或她是专业人士、有抱负的艺术家还是初学者（图 1.4）。

项目或便携式制作系统的最大好处之一是艺术家可以从各种工具和玩具中进行选择，以产生特定的声音 - 或者获得他或她喜欢的特定声音。这项技术通常非常强大，因为组件组合在一起可以创建大量的声音并处理各种特定于任务的功能。这样的系统可能包括一个或多个键盘合成器、合成器模块、采样器、鼓机、计算机（带有数字音频工作站和音序器）、效果设备和音频混音功能。

图 1.4。在卧室工作室中开始这一切。（照片由 Yamaha Corporation of America 提供；www.yamaha.com。）

像这样的系统经常被安装在工作和有抱负的音乐家的家中。
它们的大小从占用艺术家卧室的一角到安装在专用项目工作室中的大型系统不等。所有这些系统类型都可以设计为处理广泛的应用，并且具有让艺术家在创作情绪来临时在舒适的环境中创作音乐的重要优势。这种制作奢侈品在二十年前会花费艺术家一大笔钱，但现在几乎每个工作和有抱负的音乐家都可以负担得起。

####
MIDI on the Go
Of course, MIDI production systems can appear in any number of shapes and sizes and can be designed to match a wide range of production and budget needs. For example, a portable, all-in-one keyboard instrument (known as a MIDI workstation) often includes an integrated keyboard, polyphonic synthesizer, percussion sounds, built-in sequencer, and audio recording capabilities … all in a single hardware package. Laptops have hit the production scene big time, as they can combine software recording and production applications with portable keyboard controllers and audio interface devices to create a professional production system that lets us compose, produce, and mix in the studio or on the beach of a remote seaside island (Figure 1.5).

Figure 1.5. Between takes. (Photograph courtesy of M-Audio, A Division of Avid Technology; www.m-audio.com.)

####
MIDI 随身携带
当然，MIDI 制作系统可以有多种形状和大小，并且可以设计为满足各种制作和预算需求。例如，便携式一体式键盘乐器（称为 MIDI 工作站）通常包括集成键盘、复音合成器、打击乐音色、内置音序器和音频录制功能……所有这些都包含在一个硬件包中。笔记本电脑在制作领域大受欢迎，因为它们可以将软件录制和制作应用程序与便携式键盘控制器和音频接口设备相结合，以创建专业的制作系统，让我们可以在工作室或偏远的海边岛屿的海滩上创作、制作和混音（图 1.5）。

图 1.5。拍摄之间。（照片由 M-Audio 提供，Avid Technology 的一个部门；www.m-audio.com。）

####
MIDI in the Studio
MIDI has also dramatically changed the sound, technology, and production habits of the record- ing studio (Figure 1.4). Before MIDI and the concept of the home project studio, the professional recording studio was one of the only production environments that allowed an artist or composer to combine instruments and sound textures into a final recorded product. Often, the process of recording a group in a live setting was (and still can be) an expensive and time-consuming process.

This is due to the high cost of hiring session musicians and the high hourly rates that are charged for a professional studio—not to mention Murphy’s studio law, which states that you’ll always spend more time and money than you thought you ever could in an effort to capture that elusive “ideal performance.” Because of the digital audio workstation (DAW) and MIDI, much of the music production process can now be preplanned and rehearsed (or even totally produced and recorded) before you step into the studio (Figure 1.6). This out-and-out luxury has reduced the number of hours that are needed for laying down recorded tracks to a cost-effective minimum; for example, it is now commonplace for groups to record and produce entire albums in their own project studios. Once completed (or nearly completed), the group can either dump the tracks to tape or simply bring their entire set of MIDI and recorded audio tracks into the studio and lay the instrument tracks down to disc or tape. In a professional studio, the tracks can be sweetened into a polished state by adding vocals or other instruments. Finally, the tracks can then be professionally mixed down into a final product. In essence, through the use of careful planning and preproduction in the project studio, a project can be produced in a much more timely fashion (and hopefully on budget) than would otherwise be possible.

Figure 1.6. Steve Tushar, sound effects editor and musician, with his MC Media Application Controller running Nuendo.
(Photograph courtesy of Andrew Wild, Euphonix, Inc.; www.euphonix.com.)

Figure 1.7. Euphonix System 5 console at Goldcrest Post in London. (Photograph by Patrick Denis, courtesy of Euphonix, Inc.; www.euphonix.com.)

####
录音室中的 MIDI
MIDI 还极大地改变了录音室的声音、技术和制作习惯（图 1.4）。在 MIDI 和家庭项目工作室概念出现之前，专业录音室是唯一允许艺术家或作曲家将乐器和声音纹理组合成最终录音产品的制作环境之一。通常，在现场环境中录制乐队的过程是（现在仍然是）一个昂贵且耗时的过程。

这是由于聘请伴奏音乐家的成本高昂以及专业录音室收取的高小时费率——更不用说墨菲工作室定律，该定律指出，为了捕捉难以捉摸的“理想表演”，你总是会花费比你想象的更多的时间和金钱。由于数字音频工作站 (DAW) 和 MIDI，现在大部分音乐制作过程都可以在你进入录音室之前预先计划和排练（甚至完全制作和录制）（图 1.6）。这种彻头彻尾的奢侈将录制音轨所需的时间减少到最低限度，从而降低成本；例如，现在乐队在自己的项目工作室录制和制作整张专辑已是司空见惯。一旦完成（或接近完成），乐队可以将音轨转储到磁带上，或者干脆将他们的整个 MIDI 和录制的音轨带入工作室，并将乐器音轨放到光盘或磁带上。在专业工作室中，可以通过添加人声或其他乐器将音轨美化为精致状态。最后，可以将音轨专业地混合成最终产品。从本质上讲，通过在项目工作室中进行精心规划和预制作，可以比其他方式更及时地（并且希望在预算之内）制作项目。

图 1.6. 音效编辑兼音乐家 Steve Tushar 和他的 MC Media Application Controller 一起运行 Nuendo。
（照片由 Euphonix, Inc. 的 Andrew Wild 提供；www.euphonix.com。）

图 1.7。伦敦 Goldcrest Post 的 Euphonix System 5 控制台。（摄影：Patrick Denis，由 Euphonix, Inc. 提供；www.euphonix.com。）

####
MIDI in Audio-for-Visual and Film
Electronic music has long been an indispensable tool for the scoring and audio postproduction of television commercials, industrial videos, television shows, and full-feature motion picture sound tracks (Figure 1.7). For productions that are on a tight budget, entire scores are often written and produced in a project studio at a mere fraction of what it might cost to hire the musicians, a stu- dio, and mixdown rooms. Even high-budget projects make extensive use of MIDI in the prepro- duction and production phases. Often, orchestral scores for such projects are composed, edited, and finessed as a MIDI version of the composer’s score before the expensive orchestral tracks are finally recorded in the studio. Before MIDI, this simply wasn’t possible. Once approved, the final MIDI score can be printed and distributed to the musicians before the session.

####
音频视频和电影中的 MIDI
长期以来，电子音乐一直是电视广告、工业视频、电视节目和全功能电影音轨的配乐和音频后期制作中不可或缺的工具（图 1.7）。对于预算紧张的制作，整个乐谱通常在项目工作室中编写和制作，而成本仅为聘请音乐家、工作室和混音室所需费用的一小部分。即使是高预算的项目也会在前期制作和制作阶段大量使用 MIDI。通常，在昂贵的管弦乐曲目最终在工作室录制之前，此类项目的管弦乐谱会作为作曲家乐谱的 MIDI 版本进行创作、编辑和完善。在 MIDI 出现之前，这根本不可能。一旦获得批准，最终的 MIDI 乐谱就可以在会议开始前打印并分发给音乐家。

####
MIDI in Live Performance
Electronic music production and MIDI are also at home on the stage. Obviously, MIDI has played a crucial role in helping to bring live music to the masses. The ability to sequence rhythm and background parts in advance, chain them together into a single, controllable sequence (using a jukebox-type sequencing program), and then play them on stage has become an indispensable live-performance tool for many musicians. This technique is widely used by solo artists who have become one-man bands by singing and playing their guitar to a series of background sequences.

Larger techno-groups commonly use extensive on-stage loop and power sequencing to drive instruments, lighting and visuals in ways that are staggeringly compelling.

Again, the power of MIDI lies in the fact that much of a performance can be composed and pro- duced in advance of going on stage or on tour. With advances in digital audio, recorded sounds can be easily integrated into the performance. The integration of looping technology often allows for on-the-spot improvisation, adding a fresh and varied feel to the performance for those on stage and in the audience. In addition to communicating performance data, MIDI con- trollers can be used to vary a staggering range of control parameters in real time.

In addition to allowing for control over on-stage music performance, lighting, and preproduced sequencing, MIDI can play a strong role in the production and execution of on-stage lighting and special effects. Most modern-day lighting boards are equipped with a MIDI interface, allowing the lighting to be controlled from a linear sequencer over the course of a song or production—or, from a loop-based sequencer that allows for scene changes in a more interactive and on-the-spot manner (while still allowing scenes to be synchronized to the basic script, when needed).

####
现场表演中的 MIDI
电子音乐制作和 MIDI 也在舞台上大行其道。显然，MIDI 在帮助将现场音乐带给大众方面发挥了至关重要的作用。能够提前对节奏和背景部分进行排序，将它们链接成一个单一的、可控制的序列（使用点唱机类型的排序程序），然后在舞台上播放它们，已经成为许多音乐家不可或缺的现场表演工具。这种技术被独唱艺术家广泛使用，他们通过随着一系列背景序列唱歌和弹吉他，成为一人乐队。

较大的技术团体通常使用广泛的舞台循环和电源排序来驱动乐器、灯光和视觉效果，方式令人惊叹。

同样，MIDI 的强大之处在于，大部分表演可以在上台或巡演之前创作和制作。随着数字音频的进步，录制的声音可以轻松地集成到表演中。循环技术的集成通常允许现场即兴表演，为舞台上和观众增添新鲜和多样化的表演感觉。除了传达表演数据外，MIDI 控制器还可用于实时改变范围惊人的控制参数。

除了允许控制舞台上的音乐表演、灯光和预制作的排序之外，MIDI 还可以在舞台灯光和特效的制作和执行中发挥重要作用。大多数现代灯光板都配备了 MIDI 接口，允许在歌曲或作品的过程中从线性音序器控制灯光 - 或者从基于循环的音序器控制场景，从而以更具交互性和现场的方式进行场景变化（同时仍允许在需要时将场景与基本脚本同步）。

####
MIDI and Visuals
Speaking of on-screen effects, the ability to offer control over a preprogrammed sequence or inter- active loops has put MIDI directly into the driver’s seat when it comes to on-stage visuals and video playback (Figures 1.8 and 1.9). Many music acts are beginning to integrate visuals into their band—so much so that VJs now stand alongside their bandmates on-stage, offering up compelling visuals that can be diced, sequenced, and scratched in forms that can instantly switch from being totally chaotic to being in perfect sync … and then back again.

####
MIDI 和视觉效果
说到屏幕效果，能够控制预编程序列或交互式循环使 MIDI 直接成为舞台视觉效果和视频播放的主导（图 1.8 和 1.9）。许多音乐表演开始将视觉效果融入他们的乐队中——以至于 VJ 现在与乐队成员一起站在舞台上，提供引人注目的视觉效果，这些视觉效果可以以可以立即从完全混乱切换到完美同步的形式进行切割、排序和刮擦……然后再次切换回来。

####
MIDI and Multimedia One of the “media” in multimedia is definitely MIDI. It often pops up in places that you might expect—and in others that might take you by surprise. With the advent of General MIDI (a standardized specification that makes it possible for any soundcard or GM-compatible device to play back a score using the originally intended sounds and program settings), it is possible (and common) for MIDI scores to be integrated into multimedia games, text documents, CD- ROMs, and even websites. Due to the fact that MIDI is simply a series of performance com- mands (unlike digital audio, which actually encodes the audio information), the media’s data overhead requirements are extremely low. This means that almost no processing power is required to play MIDI, making it the ideal medium for playing real-time music scores while you are actively browsing text, graphics, or other media over the Internet. Truly, when it comes to weaving MIDI into the various media types, the sky (and your imagination) is the creative and technological limit.

####
MIDI 和多媒体 多媒体中的“媒体”之一肯定是 MIDI。它经常出现在您可能预料到的地方，也经常出现在让您大吃一惊的地方。随着通用 MIDI（一种标准化规范，使任何声卡或 GM 兼容设备都可以使用原始声音和程序设置播放乐谱）的出现，MIDI 乐谱可以（并且很常见）集成到多媒体游戏、文本文档、CD-ROM 甚至网站中。由于 MIDI 只是一系列性能命令（与实际对音频信息进行编码的数字音频不同），因此媒体的数据开销要求极低。这意味着播放 MIDI 几乎不需要任何处理能力，使其成为在您通过互联网浏览文本、图形或其他媒体时播放实时乐谱的理想媒体。确实，当谈到将 MIDI 编织到各种媒体类型中时，天空（和您的想象力）是创造力和技术的极限。

Figure 1.8. The motion dive .tokyo performance package. (Photograph courtesy of Roland Corporation; www.rolandus.com/edirol.)

图 1.8. motion dive .tokyo 性能包。（图片由 Roland Corporation 提供；www.rolandus.com/edirol。）

Figure 1.9. ArKaos VJ MIDI video authoring software. (Photograph courtesy of ArKaos S.A.; www.arkaos.net.)

图 1.9. ArKaos VJ MIDI 视频创作软件。（图片由 ArKaos S.A. 提供；www.arkaos.net。）

####
MIDI on the Phone
With the integration of the General MIDI standard into various media devices, one of the fastest- growing MIDI applications, surprisingly, is probably comfortably resting in your pocket or purse right now—the ring tone on your cell phone (Figure 1.10). The ability to use MIDI (and often digital soundfiles) to let you know who is calling has spawned an industry that allows your cell to be personalized and super fun. One of my favorite ring tone stories happened on Hollywood Boulevard in L.A. This tall, lanky man was sitting at a café when his cell phone started blaring out the “If I Only Had a Brain” sequence from The Wizard of Oz. It wouldn’t have been nearly as funny if the guy didn’t look a lot like the scarecrow character. Of course, everyone laughed.

Figure 1.10. One ringy-dingy … MIDIhelps us to reach out and touch someone through ring tones.

####
手机上的 MIDI
随着通用 MIDI 标准集成到各种媒体设备中，令人惊讶的是，增长最快的 MIDI 应用程序之一可能现在就舒适地放在您的口袋或钱包中——手机铃声（图 1.10）。使用 MIDI（通常是数字声音文件）让您知道谁在打电话的能力催生了一个行业，使您的手机个性化并且超级有趣。我最喜欢的铃声故事之一发生在洛杉矶的好莱坞大道。这个高瘦的男人坐在一家咖啡馆里，他的手机开始播放《绿野仙踪》中的“如果我只有一个大脑”片段。如果这个人看起来不太像稻草人角色，那就不会那么有趣了。当然，每个人都笑了。

图 1.10。一个铃声……MIDI 帮助我们通过铃声接触和接触某人。

*************************************************
MIDI 1.0

The Musical Instrument Digital Interface is a digital communications protocol. That’s to say, it is a standardized control language and hardware specification that makes it possible for electronic instruments, processors, controllers, and other device types to communicate performance and control-related data in real time.

MIDI 1.0

乐器数字接口是一种数字通信协议。也就是说，它是一种标准化的控制语言和硬件规范，使电子乐器、处理器、控制器和其他类型的设备能够实时传输演奏和控制相关数据。

####
Exploring the Spec
MIDI is a specified data format that must be strictly adhered to by those who design and man- ufacture MIDI-equipped instruments and devices. Because the format is standardized, you don’t have to worry about whether the MIDI output of one device will be understood by the MIDI in port of a device that’s made by another manufacturer. As long as the data ports say and/or com- municate MIDI, you can be assured that the data (at least the basic performance functions) will be transmitted and understood by all devices within the connected system. In this way, the user need only consider the day-to-day dealings that go hand-in-hand with using electronic instru- ments, without having to be concerned with data compatibility between devices.

####
探索规范
MIDI 是一种指定的数据格式，设计和制造配备 MIDI 的乐器和设备的人员必须严格遵守该格式。由于格式是标准化的，因此您不必担心一个设备的 MIDI 输出是否会被另一家制造商生产的设备的 MIDI 输入端口理解。只要数据端口支持 MIDI 和/或通信，您就可以确保数据（至少是基本性能功能）将被传输并被连接系统内的所有设备理解。这样，用户只需考虑与使用电子乐器密切相关的日常事务，而不必担心设备之间的数据兼容性。

####
The Digital Word
One of the best ways to gain insight into how the MIDI specification works is to compare MIDI to a spoken language. As humans, we’ve adapted our communication skills to best suit our physical bod- ies. Ever since the first grunt, we’ve found that it’s easiest for us to communicate with our vocal chords. And we’ve been doing it ever since. Over time, language developed by assigning a standard- ized meaning to a series of vocalized sounds (words). Eventually these words came to be grouped in such a way as to convey meanings that can be easily communicated … and, finally, written. For exam- ple, in order to record the English language, a standard notation system was developed that assigned 26 symbols to specific sounds (letters of the alphabet) that, when grouped together, could communi- cate an equivalent spoken word (Figure 2.1). When these words are strung into complete sentences, a more complex form of communication is used that can convey information in a way that has a greater meaning (whether spoken or recorded onto paper or other medium). For example, the letters B, O, O, and K don’t mean much when used individually; however, when grouped into a word, they refer to a physical media device that contains recorded data, which hopefully conveys messages that relate to a general theme. Changing a symbol in the word could change its meaning entirely; for example, changing the K to a T within the grouped word makes it refer to a tool that’s better off worn on your feet than carried in a backpack. When placed into a sentence, grouped words can be used to convey complex messages with greater clarity (e.g., Dude, is that a pirate book about pirate boots=).

Microprocessors and computers, on the other hand, are digitally based devices that obviously lack vocal chords and ears (although even that’s changing). However, because they have the unique advantage of being able to process numbers at a very high rate, the obvious language of choice is the reception and transmission of digital data.

Unlike our base 10 system of counting, computers are limited to communicating with a binary system of 0’s and 1’s (or off and on). Like humans, computers group these binary digits (known as bits) into larger numeric “words” that represent and communicate specific information and instructions. Just as humans communicate using simple sentences, a computer can generate and respond to a series of related digital words that are understood by other digital systems or software programs (Figure 2.2).

####
数字语言
了解 MIDI 规范如何工作的最佳方法之一是将 MIDI 与口语进行比较。作为人类，我们已经调整了我们的沟通技巧以最适合我们的身体。自从第一次发出咕噜声以来，我们发现用声带交流对我们来说最容易。从那时起，我们就一直在这样做。随着时间的推移，语言通过为一系列发声的声音（单词）分配标准化含义而发展起来。最终，这些单词被分组，以便传达可以轻松传达的含义……并最终被书写出来。例如，为了记录英语，开发了一个标准符号系统，将 26 个符号分配给特定的声音（字母表的字母），当这些字母组合在一起时，可以传达等效的口语单词（图 2.1）。当这些单词串成完整的句子时，就会使用一种更复杂的交流形式，可以以更有意义的方式传达信息（无论是口头还是记录在纸上或其他媒介上）。例如，字母 B、O、O 和 K 单独使用时意义不大；但是，当它们组合成一个单词时，它们指的是包含记录数据的物理媒体设备，希望能够传达与一般主题相关的信息。改变单词中的符号可能会完全改变其含义；例如，将组合单词中的 K 改为 T，使其指的是一种最好穿在脚上而不是放在背包里的工具。当放在句子中时，组合单词可用于更清晰地传达复杂信息（例如，伙计，那是一本关于海盗靴的海盗书吗？）。

另一方面，微处理器和计算机是基于数字的设备，显然缺乏声带和耳朵（尽管这一点正在改变）。然而，由于它们具有能够以极高的速度处理数字的独特优势，因此显然首选语言是数字数据的接收和传输。

与我们的十进制计数系统不同，计算机仅限于与 0 和 1（或关闭和打开）的二进制系统进行通信。与人类一样，计算机将这些二进制数字（称为位）分组为更大的数字“字”，用于表示和传达特定信息和指令。就像人类使用简单的句子进行交流一样，计算机可以生成并响应一系列相关的数字字，这些字可以被其他数字系统或软件程序理解（图 2.2）。

Figure 2.2. Example of a digitally generated MIDI message.
图 2.2. 数字生成的 MIDI 消息的示例。

####
The MIDI Message
MIDI digitally communicates musical performance data between devices as a string of MIDI mes- sages. These messages are traditionally transmitted through a standard MIDI line in a serial fashion at a speed of 31,250 bits/sec. Within a serial data transmission line, data travels in a single-file fashion through a single conductor cable (Figure 2.3a); a parallel data connection, on the other hand, is able to simultaneously transmit digital bits in a synchronous fashion over a number of wires (Figure 2.3b).

When using a standard MIDI cable, it’s important to remember that data can only travel in one direction from a single source to a destination (Figure 2.4a). In order to make two-way commu- nication possible, a second MIDI data line must be used to communicate data back to the device, either directly or thru the MIDI chain (Figure 2.4b).

####
MIDI 消息
MIDI 以 MIDI 消息串的形式在设备之间以数字方式传输音乐演奏数据。这些消息通常通过标准 MIDI 线以串行方式传输，速度为 31,250 位/秒。在串行数据传输线中，数据以单文件方式通过单芯电缆传输（图 2.3a）；另一方面，并​​行数据连接能够同时通过多条线路以同步方式传输数字位（图 2.3b）。

使用标准 MIDI 电缆时，请务必记住数据只能从单个源向目的地单向传输（图 2.4a）。为了实现双向通信，必须使用第二条 MIDI 数据线将数据直接或通过 MIDI 链传回设备（图 2.4b）。

Figure 2.3. Serial versus parallel data transmission: (a) Serial data must be transmitted in a single-file fashion over a serial data line.
(b) Multiple bits of data can be synchronously transmitted over a number of parallel lines.

图 2.3. 串行与并行数据传输：(a) 串行数据必须通过串行数据线以单文件方式传输。
(b) 多位数据可以通过多条并行线同步传输。

Figure 2.4. MIDI data can only travel in one direction through a single MIDI cable: (a) data transmission from a single source to a destination; (b) two-way data communication using two cables.

图 2.4. MIDI 数据只能通过单条 MIDI 电缆单向传输：(a) 数据从单个源传输到目的地；(b) 使用两根电缆进行双向数据通信。

Figure 2.5. The most significant bit of a MIDI data byte is used to distinguish between a status byte (where MSB = 1) and a data byte (where MSB = 0).
	
图 2.5. MIDI 数据字节的最高有效位用于区分状态字节（其中 MSB ？ 1）和数据字节（其中 MSB ？ 0）。

MIDI messages are made up of groups of 8-bit words (known as bytes), which are transmitted in a serial fashion to convey a series of instructions to one or all MIDI devices within a system.

MIDI 消息由多组 8 位字（称为字节）组成，这些字以串行方式传输，以向系统内的一个或所有 MIDI 设备传达一系列指令。

####
Only two types of bytes are defined by the MIDI specification: the status byte and the data byte.
◆ A status byte is used to identify what type of MIDI function is to be performed by a device or program. It is also used to encode channel data (allowing the instruction to be received by a device that’s set to respond to the selected channel).
◆ A data byte is used to associate a value to the event that’s given by the accompanying status byte.

####
MIDI 规范仅定义了两种类型的字节：状态字节和数据字节。
◆ 状态字节用于识别设备或程序要执行哪种类型的 MIDI 功能。它还用于编码通道数据（允许设置为响应所选通道的设备接收指令）。
◆ 数据字节用于将值与随附状态字节给出的事件相关联。

Although a byte is made up of eight bits, the most significant bit (MSB; the leftmost binary bit within a digital word) is used solely to identify the byte type. The MSB of a status byte is always 1, while the MSB of a data byte is always 0 (Figure 2.5). For example, a 3-byte MIDI Note-On message (which is used to signal the beginning of a MIDI note) in binary form might read as shown in Table 2.1. Thus, a 3-byte Note-On message of (10010100) (01000000) (01011001) will transmit instructions that would be read as: “Transmitting a Note-On message over MIDI channel #5, using keynote #64, with an attack velocity [volume level of a note] of 89.”

虽然一个字节由 8 位组成，但最高有效位 (MSB；数字字中最左边的二进制位) 仅用于标识字节类型。状态字节的 MSB 始终为 1，而数据字节的 MSB 始终为 0（图 2.5）。例如，二进制形式的 3 字节 MIDI 音符开启消息（用于表示 MIDI 音符的开始）可能如表 2.1 所示。因此，3 字节音符开启消息 (10010100) (01000000) (01011001) 将传输指令，如下所示：“通过 MIDI 通道 #5 传输音符开启消息，使用基调 #64，音符的起音速度 [音符的音量] 为 89。”

Binary numbers (0’s and 1’s) are placed into groups (called binary words) that translate human
concepts into an analogous language that’s spoken by computers. For example, with regard to
MIDI channels:
0000 = CH#1 0100 = CH#5 1000 = CH#9 1100 = CH#13
0001 = CH#2 0101 = CH#6 1001 = CH#10 1101 = CH#14
0010 = CH#3 0110 = CH#7 1010 = CH#11 1110 = CH#15
0011 = CH#4 0111 = CH#8 1011 = CH#12 1111 = CH#16

二进制数字（0 和 1）被分成几组（称为二进制字），将人类的概念翻译成计算机所说的类似语言。例如，对于 MIDI 通道：
0000 = CH#1 0100 = CH#5 1000 = CH#9 1100 = CH#13
0001 = CH#2 0101 = CH#6 1001 = CH#10 1101 = CH#14
0010 = CH#3 0110 = CH#7 1010 = CH#11 1110 = CH#15
0011 = CH#4 0111 = CH#8 1011 = CH#12 1111 = CH#16

####
MIDI Channels
Just as a public speaker might single out and communicate a message to one individual in a crowd, MIDI messages can be directed to communicate information to a specific device or range of devices within a MIDI system. This is done by imbedding a channel-related nibble (4 bits) within the status/channel number byte (Figure 2.6). This makes it possible for performance or control information to be communicated to a specific device—or a sound generator within a device—that’s assigned to a particular channel.

####
MIDI 通道
就像公共演讲者可能会从人群中挑选出一个人并向他传达信息一样，MIDI 消息也可以被定向为将信息传达给 MIDI 系统内的特定设备或一系列设备。这是通过在状态/通道号字节中嵌入与通道相关的半字节（4 位）来实现的（图 2.6）。这使得性能或控制信息可以传达给分配给特定通道的特定设备（或设备内的声音发生器）。

Since this nibble is 4 bits wide, up to 16 discrete MIDI channels can be transmitted through a single MIDI cable or designated port.

Whenever a MIDI device, sound generator within a device, or program function is instructed to respond to a specific channel number, it will only respond to messages that are transmitted on that channel (i.e., it ignores channel messages that are transmitted on any other channel). For example, let’s assume that we’re going to create a short song using a synthesizer that has a built- in sequencer (a device or program that’s capable of recording, editing, and playing back MIDI data) and two other “synths” (Figure 2.7):

1. We could start off by recording a drum track into the master synth using channel 10 (many synths are preassigned to output drum/percussion sounds on this channel).
2. Once recorded, the sequence will transmit the notes and data over channel 10, allowing the synth’s percussion section to played.

Figure 2.6. The least significant nibble (4 bits) of the status/channel number byte is used to encode channel number data, allowing up to 16 discrete MIDI channels to be transmitted through a single MIDI cable or designated port.

Figure 2.7. MIDI setup showing a set of MIDI channel assignments.

3. Next, we could set a synth module to channel 3 and instruct the master synth to transmit on the same channel (since the synth module is set to respond to data on channel 3, its generators will sound whenever the master keyboard is played). We can now begin recording a melody line into the sequencer’s next track.
4. Playing back the sequence will then transmit data to both the master synth (percussion section) and the module (melody line) over their respective channels. At this point, our song is beginning to take shape.
5. Now we can set a sampler (or other instrument type) to respond to channel 5 and instruct the master synth to transmit on the same channel, allowing us to further embellish the song.
6. Now that the song’s complete, the sequencer can play the musical parts to the synths on their respective MIDI channels—all in an environment that allows us to have complete control of volume, to edit, and to have a wide range of functions over each instrument.
In short, we’ve created a true multichannel working environment.

It goes without saying that the above example is just but one of the infinite setup and channel possibilities that can be encountered in a production environment. It’s often true, however, that even the most complex MIDI and production rooms will have a system … a basic channel and overall layout that makes the day-to-day operation of making music easier. This layout and the basic decisions that you might make in your own room are, of course, up to you. Streamlining a system to work both efficiently and easily will come with time, experience, and practice.

由于这个半字节有 4 位宽，因此最多可以通过单个 MIDI 电缆或指定端口传输 16 个离散 MIDI 通道。

每当 MIDI 设备、设备内的声音发生器或程序功能被指示响应特定通道号时，它只会响应在该通道上传输的消息（即，它会忽略在任何其他通道上传输的通道消息）。例如，假设我们要使用具有内置音序器（能够录制、编辑和播放 MIDI 数据的设备或程序）和两个其他“合成器”的合成器创建一首短歌（图 2.7）：

1. 我们可以从使用通道 10 将鼓音轨录制到主合成器开始（许多合成器都预先分配为在此通道上输出鼓/打击乐声音）。

2. 录制完成后，音序将通过通道 10 传输音符和数据，从而播放合成器的打击乐部分。

图 2.6。状态/通道号字节的最低有效半字节（4 位）用于编码通道号数据，允许通过单个 MIDI 电缆或指定端口传输最多 16 个离散 MIDI 通道。

图 2.7。MIDI 设置显示一组 MIDI 通道分配。

3. 接下来，我们可以将合成器模块设置为通道 3，并指示主合成器在同一通道上传输（由于合成器模块设置为响应通道 3 上的数据，因此只要弹奏主键盘，其发生器就会发声）。我们现在可以开始将旋律线录制到音序器的下一个音轨中。
4. 播放序列会通过各自的通道将数据传输到主合成器（打击乐部分）和模块（旋律线）。此时，我们的歌曲开始成形。
5. 现在我们可以设置一个采样器（或其他乐器类型）来响应通道 5，并指示主合成器在同一通道上传输，这样我们就可以进一步修饰歌曲。
6. 现在歌曲已经完成，音序器可以在各自的 MIDI 通道上为合成器播放音乐部分——所有这些都在一个环境中进行，这个环境允许我们完全控制音量、编辑并对每个乐器进行广泛的功能控制。
简而言之，我们创建了一个真正的多通道工作环境。

毋庸置疑，上述示例只是生产环境中可能遇到的无限设置和通道可能性之一。然而，通常情况下，即使是最复杂的 MIDI 和制作室也会有一个系统……一个基本的通道和整体布局，使制作音乐的日常操作更容易。当然，这种布局和您可能在自己的房间里做出的基本决定取决于您。简化系统以使其高效且轻松地工作需要时间、经验和实践。

####
Auto Channelizing
Keeping track of the channels that are assigned to the various devices and tone generators can sometimes be a pain. As the previous paragraph suggests, it’s only natural that you’ll eventually come up with your own system for assigning MIDI channels to the various devices in your pro- duction studio. One of the ways to ease the pain of assigning channels throughout the studio is through the use of a channelizing feature that’s built into most sequencers. In short, channeliz- ing allows a sequencer to accept incoming data, regardless of its MIDI channel number, reassign the outgoing data to a selected track’s channel, and then output it to the appropriate device. This can be best understood by trying it out for yourself:

####
自动通道化
跟踪分配给各种设备和音调发生器的通道有时会很麻烦。正如上一段所暗示的，您最终会想出自己的系统来将 MIDI 通道分配给制作工作室中的各种设备，这是很自然的。减轻整个工作室分配通道的痛苦的方法之一是使用大多数音序器内置的通道化功能。简而言之，通道化允许音序器接受传入数据（无论其 MIDI 通道号如何），将传出数据重新分配给选定轨道的通道，然后将其输出到适当的设备。您可以通过亲自尝试来最好地理解这一点：

####
DIY Auto Channelizing
1. Plug a keyboard controller into a DAW or MIDI sequencer and make it the active MIDI input source.
2. Create a MIDI track and assign its channel and port numbers to one of your favorite devices (e.g., transmitting on channel 1 to your favorite synth).
3. Create another MIDI track and assign its channel and port numbers to another of your favorite devices (e.g., transmitting on channel 2 on another synth).
4. Create yet another MIDI track and assign its channel and port numbers to another of your favorite devices (e.g., transmitting on channel 3 on yet another synth lead.
5. Next, place the first track into the Record Ready mode and play your keyboard. This should cause the MIDI data to route to channel 1, allowing the first device to begin playing.
6. Now, unselect the first track and place the second MIDI track into Record/Monitor Ready mode. This should cause the MIDI data to automatically route to channel 2, allowing the second device to begin playing.
7. Finally, place the third track into the Record Ready mode and play your keyboard. Does the output channel routing automatically change so the third device responds to the MIDI data by playing? If not, be patient. Read through the manual and check your cables. If at first you don’t succeed ….

####
DIY 自动通道化
1. 将键盘控制器插入 DAW 或 MIDI 音序器，并将其设为活动 MIDI 输入源。
2. 创建 MIDI 轨道并将其通道和端口号分配给您最喜欢的设备之一（例如，通过通道 1 传输到您最喜欢的合成器）。
3. 创建另一个 MIDI 轨道并将其通道和端口号分配给您最喜欢的另一个设备（例如，通过另一个合成器的通道 2 传输）。
4. 创建另一个 MIDI 音轨并将其通道和端口号分配给您最喜欢的另一个设备（例如，在另一个合成器导线上的通道 3 上传输）。
5. 接下来，将第一个音轨置于“录音就绪”模式并弹奏键盘。这应该会导致 MIDI 数据路由到通道 1，从而允许第一个设备开始播放。
6. 现在，取消选择第一个音轨并将第二个 MIDI 音轨置于“录音/监听就绪”模式。这应该会导致 MIDI 数据自动路由到通道 2，从而允许第二个设备开始播放。
7. 最后，将第三个音轨置于“录音就绪”模式并弹奏键盘。输出通道路由是否会自动更改，以便第三个设备通过播放来响应 MIDI 数据？如果没有，请耐心等待。通读手册并检查您的电缆。如果一开始你没有成功……

From this, you can see that the MIDI channel or port will automatically change to match that of the selected track—in effect, making MIDI channel assignment much easier and allowing you to stick to the task of making music.

由此，您可以看到 MIDI 通道或端口将自动更改以匹配所选音轨 - 实际上，这使得 MIDI 通道分配变得更加容易，并允许您专注于制作音乐的任务。

####
MIDI Modes
Electronic instruments often vary in the number of sounds and notes that can be simultaneously produced by their internal sound generating circuitry. For example, certain instruments can only produce one note at a single time (known as a monophonic instrument), while others can gen- erate 16, 32, and even 64 notes at once (these are known as polyphonic instruments). The latter type can easily play chords or more than one musical line on a single instrument at a time.

In addition, some instruments are only capable of producing a single generated sound patch (often referred to as a “voice”) at any one time. Its generating circuitry could be polyphonic, allowing the player to lay down chords and bass or melody lines, but it can only produce these notes using a sin- gle, characteristic sound at any one time (e.g., an electric piano, a synth bass, or a string patch).

However, the vast majority of newer synths differ from this in that they’re multi-timbral in nature, meaning that they can generate numerous sound patches at any one time (e.g., an electric piano, a synth bass, and a string patch, as can be seen in Figure 2.8). That’s to say that it is common to run across electronic instruments that can simultaneously generate a number of voices, each offering its own control over parameters (such as volume, panning, or modulation). Best of all, it is also com- mon for different sounds to be assigned to their own MIDI channels, allowing multiple patches to be internally mixed within the device to a stereo output bus or independent outputs.

####
MIDI 模式
电子乐器的内部声音生成电路可以同时产生的声音和音符数量通常各不相同。例如，某些乐器一次只能产生一个音符（称为单音乐器），而其他乐器可以一次产生 16、32 甚至 64 个音符（这些被称为复音乐器）。后一种乐器可以很容易地在单个乐器上同时演奏和弦或多条音乐线。

此外，有些乐器一次只能产生一个生成的声音补丁patch（通常称为“声音”）。其生成电路可以是复音的，允许演奏者放下和弦和低音或旋律线，但它一次只能使用单一的特征声音产生这些音符（例如，电钢琴、合成贝司或弦乐补丁）。

然而，绝大多数新型合成器与此不同，它们本质上是多音色的，这意味着它们可以同时生成多个声音补丁（例如，如图 2.8 所示，电钢琴、合成贝司和弦乐补丁）。也就是说，经常会遇到可以同时生成多个声音的电子乐器，每个声音都提供自己的参数控制（例如音量、声像或调制）。最重要的是，不同的声音通常被分配到自己的 MIDI 通道，从而允许多个补丁在设备内部混合到立体声输出总线或独立输出。

It should be noted that the word “patch” is a direct reference from earlier analog synthesizers, where patch chords were used to connect one sound generator block or processing function to another to create a generated sound.

值得注意的是，“patch”这个词直接来源于早期的模拟合成器，其中补丁线用于将一个声音发生器块或处理功能连接到另一个声音发生器块或处理功能以产生声音。

Figure 2.8. Multi-timbral instruments are virtual bands-in-a-box that can simultaneously generate multiple patches, each of which can be assigned to its own MIDI channel.

图 2.8.多音色乐器是盒内虚拟的乐队，可以同时生成多个音色，每个音色都可以分配给自己的 MIDI 通道。

As a result of these differences between instruments and devices, a defined set of guidelines (known as MIDI reception modes) has been specified that allows a MIDI instrument to trans- mit or respond to MIDI channel messages in several ways. For example, one instrument might be programmed to respond to all 16 MIDI channels at one time, while another might be poly- phonic in nature, with each voice being programmed to respond only to a single MIDI channel.

由于乐器和设备之间存在这些差异，因此制定了一套明确的准则（称为 MIDI 接收模式），允许 MIDI 乐器以多种方式传输或响应 MIDI 通道消息。例如，一种乐器可能被编程为同时响应所有 16 个 MIDI 通道，而另一种乐器可能本质上是复音的，每个声音被编程为仅响应单个 MIDI 通道。

####
Poly/Mono
An instrument or device can be set to respond to MIDI data in either the poly mode or the mono mode. Stated simply, an instrument that’s set to respond to MIDI data polyphonically will be able to play more than one note at a time. Conversely, an instrument that’s set to respond to MIDI data monophonically will only be able to play a single note at any one time.

####
复音/单音
乐器或设备可以设置为以复音模式或单音模式响应 MIDI 数据。简单地说，设置为以复音方式响应 MIDI 数据的乐器将能够一次演奏多个音符。相反，设置为以单音方式响应 MIDI 数据的乐器一次只能演奏一个音符。

####
Omni On/Off
Omni on/off refers to how a MIDI instrument will respond to MIDI messages at its input. When Omni is turned on, the MIDI device will respond to all channel messages that are being received regardless of its MIDI channel assignment. When Omni is turned off, the device will respond only to a single MIDI channel or set of assigned channels (in the case of a multi-timbral instrument).

####
Omni 开/关
Omni 开/关是指 MIDI 乐器如何响应其输入端的 MIDI 消息。当 Omni 开启时，MIDI 设备将响应所有正在接收的通道消息，而不管其 MIDI 通道分配如何。当 Omni 关闭时，设备将仅响应单个 MIDI 通道或一组分配的通道（对于多音色乐器而言）。

####
The following list and figures explain the four modes that are supported by the MIDI spec in more detail:
◆ Mode 1-Omni On/Poly—In this mode, an instrument will respond to data that’s being received on any MIDI channel and then redirect this data to the instrument’s base channel (Figure 2.9a). In essence, the device will play back everything that’s presented at its input in a polyphonic fashion, regardless of the incoming channel designations. As you might guess, this mode is rarely used.
◆ Mode 2-Omni On/Mono—As in Mode 1, an instrument will respond to all data that’s being received at its input, without regard to channel designations; however, this device will only be able to play one note at a time (Figure 2.9b). Mode 2 is used even more rarely than Mode 1, as the device can’t discriminate channel designations and can only play one note at a time.
◆ Mode 3-Omni Off/Poly—In this mode, an instrument will only respond to data that matches its assigned base channel in a polyphonic fashion (Figure 2.9c). Data that’s assigned to any other channel will be ignored. This mode is by far the most commonly used, as it allows the voices within a multi-timbral instrument to be individually controlled by messages that are being received on their assigned MIDI channels. For example, each of the 16 channels in a MIDI line could be used to independently play each of the parts in a 16-voice, multi-timbral synth.
◆ Mode 4-Omni Off/Mono—As with Mode 3, an instrument will be able to respond to performance data that’s transmitted over a single, dedicated channel; however, each voice will only be able to generate one MIDI note at a time (Figure 2.9d). A practical example of this mode is often used in MIDI guitar systems, where MIDI data is monophonically transmitted over six consecutive channels (one channel/voice per string).

####
以下列表和图表更详细地解释了 MIDI 规范支持的四种模式：
◆ 模式 1-Omni On/Poly — 在此模式下，乐器将响应任何 MIDI 通道上接收到的数据，然后将这些数据重定向到乐器的基本通道（图 2.9a）。本质上，设备将以复音方式播放其输入端呈现的所有内容，而不管传入的通道名称如何。您可能猜到了，这种模式很少使用。
◆ 模式 2-Omni On/Mono — 与模式 1 一样，乐器将响应其输入端接收到的所有数据，而不考虑通道名称；但是，此设备一次只能播放一个音符（图 2.9b）。模式 2 比模式 1 更少使用，因为设备无法区分通道名称，并且一次只能播放一个音符。
◆ 模式 3-全音关闭/复音 — 在此模式下，乐器将仅响应与其指定的基本通道以复音方式匹配的数据（图 2.9c）。分配给任何其他通道的数据将被忽略。此模式是迄今为止最常用的模式，因为它允许多音色乐器中的声音由在其指定 MIDI 通道上接收的消息单独控制。例如，MIDI 线路中的 16 个通道中的每一个都可用于独立播放 16 声部、多音色合成器中的每个部分。
◆ 模式 4-全音关闭/单声道 — 与模式 3 一样，乐器将能够响应通过单个专用通道传输的演奏数据；但是，每个声音一次只能生成一个 MIDI 音符（图 2.9d）。此模式的一个实际示例通常用于 MIDI 吉他系统，其中 MIDI 数据通过六个连续通道（每根弦一个通道/声音）单声道传输。

Base Channel
The assigned base channel determines which MIDI channel the instrument or device will respond to. For example, if a device’s base channel is set to 1, it will respond to performance messages arriving on channel 1 while ignoring those arriving on channels 2 though 16.

基本通道
指定的基本通道决定乐器或设备将响应哪个 MIDI 通道。例如，如果设备的基本通道设置为 1，它将响应到达通道 1 的演奏消息，同时忽略到达通道 2 至 16 的演奏消息。

####
Channel Voice Messages
Channel Voice messages are used to transmit real-time performance data throughout a con- nected MIDI system. They’re generated whenever a MIDI instrument’s controller is played, selected, or varied by the performer. Examples of such control changes could be the playing of a keyboard, pressing of program selection buttons, or movement of modulation or pitch wheels.

Each Channel Voice message contains a MIDI channel number within its status byte, meaning that only devices that are assigned to the same channel number will respond to these commands.

There are seven Channel Voice message types: Note-On, Note-Off, Polyphonic Key Pressure, Channel Pressure, Program Change, Pitch Bend Change, and Control Change.

####
通道语音消息
通道语音消息用于在连接的 MIDI 系统中传输实时演奏数据。每当演奏者演奏、选择或改变 MIDI 乐器的控制器时，就会生成这些消息。此类控制变化的示例包括弹奏键盘、按下程序选择按钮或移动调制轮或音调轮。

每个通道语音消息的状态字节中包含一个 MIDI 通道号，这意味着只有分配给相同通道号的设备才会响应这些命令。

有七种通道语音消息类型：音符开启、音符关闭、复音键压力、通道压力、程序变化、音高弯曲变化和控制变化。

####
Note-On Messages
A Note-On message is used to indicate the beginning of a MIDI note. It is generated each time a note is triggered on a keyboard, controller or other MIDI instrument (i.e., by pressing a key, hit- ting a drum pad, or by playing a sequence). A Note-On message consists of 3 bytes of informa- tion (Figure 2.10):
◆ Note-on status/MIDI channel number
◆ MIDI pitch number
◆ Attack velocity value

####
音符开启消息
音符开启消息用于指示 MIDI 音符的开始。每次在键盘、控制器或其他 MIDI 乐器上触发音符时（即按下琴键、敲击鼓垫或播放音序），都会生成该消息。音符开启消息由 3 个字节的信息组成（图 2.10）：
◆ 音符开启状态/MIDI 通道号
◆ MIDI 音高号
◆ 攻击速度值

The first byte in the message specifies a note-on event and a MIDI channel (1–16). The second byte is used to specify which of the possible 128 notes (numbered 0–127) will be sounded by an instrument. In general, MIDI note number 60 is assigned to the middle C key of an equally tempered keyboard, while notes 21 to 108 correspond to the 88 keys of an extended keyboard controller (Figure 2.11). The final byte is used to indicate the velocity or speed at which the key was pressed (over a value range that varies from 0 to 127). Velocity (Figure 2.12) is used to denote the loudness of a sound- ing note, which increases in volume with higher velocity values (although velocity can also be programmed to work in conjunction with other parameters, such as expression, control over timbre, or sample voice assignments).

Figure 2.10. Byte structure of a MIDI Note-On message.

Figure 2.11. M-Audio Keystation 88es MIDI controller. (Courtesy of M-Audio, a division of Avid Technology,Inc.; www.m-audio.com.)

Figure 2.12. Velocity is used to communicate the volume or loudness of a note within a performance.

Not all instruments are designed to interpret the entire range of velocity values (as with certain drum machines), and others don’t respond dynamically at all. Instruments that don’t support veloc- ity information will generally transmit an attack velocity value of 64 for every note that’s played, regardless of the how soft or hard the keys are actually being pressed. Similarly, instruments that don’t respond to velocity messages will interpret all MIDI velocities as having a value of 64.

A Note-On message that contains an attack velocity of 0 (zero) is generally equivalent to the transmission of a Note-Off message. This common implementation tells the device to silence a currently sounding note by playing it with a velocity (volume) level of 0.

消息中的第一个字节指定音符开启事件和 MIDI 通道 (1-16)。第二个字节用于指定乐器将发出 128 个可能的音符（编号为 0-127）中的哪一个。通常，MIDI 音符编号 60 分配给等调键盘的中央 C 键，而音符 21 至 108 对应于扩展键盘控制器的 88 个键（图 2.11）。最后一个字节用于指示按键的速度或速率（值范围从 0 到 127）。速度（图 2.12）用于表示发声音符的响度，速度值越高，音量越大（尽管也可以对速度进行编程以与其他参数（例如表达、音色控制或样本语音分配）协同工作）。

图 2.10。MIDI 音符开启消息的字节结构。

图 2.11. M-Audio Keystation 88es MIDI 控制器。（由 M-Audio 提供，Avid Technology,Inc. 的一个部门；www.m-audio.com。）

图 2.12. 力度用于传达演奏中音符的音量或响度。

并非所有乐器都设计为解释整个力度值范围（例如某些鼓机），而其他乐器则根本不动态响应。不支持力度信息的乐器通常会为每个演奏的音符传输 64 的攻击力度值，无论实际按下琴键的力度是轻还是重。同样，不响应力度信息的乐器会将所有 MIDI 力度解释为具有 64 的值。

包含 0（零）攻击力度的 Note-On 消息通常等同于传输 Note-Off 消息。这种常见的实现方式告诉设备通过以 0 的速度（音量）级别播放当前正在发声的音符来使其静音。

####
Note-Off Messages
A Note-Off message is used as a command to stop playing a specific MIDI note. Each Note-On mes-sage will continue to play until a corresponding Note-Off message for that note has been received.

In this way, the bare basics of a musical composition can be encoded as a series of MIDI note-on and note-off events. It should also be pointed out that a Note-Off message won’t cut off a sound; it’ll merely stop playing it. If the patch being played has a release (or final decay) slope, it will begin this stage upon receiving the message. As with the Note-On message, the note-off structure consists of 3 bytes of information (Figure 2.13):
◆ Note-off status/MIDI channel number
◆ MIDI note number
◆ Release velocity value

####
音符关闭消息
音符关闭消息用作停止播放特定 MIDI 音符的命令。每个音符开启消息将继续播放，直到收到该音符的相应音符关闭消息。

这样，音乐作品的基本内容可以编码为一系列 MIDI 音符开启和音符关闭事件。还应指出，音符关闭消息不会切断声音；它只会停止播放。如果正在播放的音色具有释放（或最终衰减）斜率，它将在收到消息后开始此阶段。与音符开启消息一样，音符关闭结构由 3 个字节的信息组成（图 2.13）：
◆ 音符关闭状态/MIDI 通道号
◆ MIDI 音符号
◆ 释放速度值

In contrast to the dynamics of attack velocity, the release velocity value (0–127) indicates the velocity or speed at which the key was released. A low value indicates that the key was released very slowly, whereas a high value shows that the key was released quickly. Although not all instru- ments generate or respond to MIDI’s release velocity feature, instruments that are capable of responding to these values can be programmed to vary a note’s speed of decay, often reducing the signal’s decay time as the release velocity value is increased.

与启音速度的动态相反，释放速度值 (0-127) 表示释放键的速度或速度。较低的值表示释放键的速度非常慢，而较高的值表示释放键的速度很快。虽然并非所有乐器都会生成或响应 MIDI 的释放速度功能，但可以对能够响应这些值的乐器进行编程以改变音符的衰减速度，通常会随着释放速度值的增加而减少信号的衰减时间。

####
All Notes Off
On the odd occasion (often when you least expect it), a MIDI note can get stuck! This can happen when data drops out or a cable gets disconnected, creating a situation where a note receives a Note-On message but not a Note-Off message, resulting in a note that continues to plaaaaaaaaaaayyyyyyyyyy!

Since you’re often too annoyed or under pressure to take the time to track down which note is the offending sucka, it’s generally far easier to transmit an All Notes Off message that silences every- thing on all channels and ports. If you get stuck in such a situation, pressing a “panic button” that might be built into your sequencer or hardware MIDI devices could save your ears and sanity.

####
所有音符关闭
偶尔（通常是在您最意想不到的时候），MIDI 音符可能会卡住！数据丢失或电缆断开连接时可能会发生这种情况，从而导致音符收到“音符开启”消息但未收到“音符关闭”消息，导致音符继续播放！

由于您经常太烦或压力太大而无法花时间找出哪个音符有问题，因此通常更容易发送“所有音符关闭”消息，使所有通道和端口上的所有音符都静音。如果您陷入这种情况，按下可能内置于您的音序器或硬件 MIDI 设备中的“紧急按钮”可以保护您的耳朵和理智。

####
Pressure (Aftertouch) Messages
Pressure messages (often referred to as “AfterTouch”) occur after you’ve pressed a key and then decide to press down harder on it. For devices that can respond to (and therefore generally transmit) these messages, AfterTouch can often be assigned to such parameters as vibrato, loudness, filter cutoff, and pitch. Two types of Pressure messages are defined by the MIDI spec:

Figure 2.13. Byte structure of a MIDI
Note-Off message.
◆ Channel Pressure
◆ Polyphonic Key Pressure

####
压力（触后）消息
压力消息（通常称为“触后”）在您按下某个键并决定用力按下该键后出现。对于可以响应（因此通常会传输）这些消息的设备，触后通常可以分配给诸如颤音、响度、滤波器截止和音高等参数。MIDI 规范定义了两种类型的压力消息：

图 2.13。MIDI 的字节结构
音符关闭消息。
◆ 通道压力
◆ 复音键压力

####
Channel Pressure Messages
Channel Pressure messages are commonly transmitted by instruments that respond only to a sin- gle, overall pressure, regardless of the number of keys that are being played at any one time (Figure 2.14). For example, if six notes are played on a keyboard and additional aftertouch pres- sure is applied to just one key, the assigned parameter would be applied to all six notes. A Channel Pressure message consists of 3 bytes of information (Figure 2.15):
◆ Channel pressure status/MIDI channel number
◆ MIDI note number
◆ Pressure value

####
通道压力信息
通道压力信息通常由只对单个整体压力作出反应的乐器传输，而不管同时弹奏的琴键数量是多少（图 2.14）。例如，如果在键盘上弹奏六个音符，并且仅在一个琴键上施加额外的触后压力，则分配的参数将应用于所有六个音符。通道压力信息由 3 个字节的信息组成（图 2.15）：
◆ 通道压力状态/MIDI 通道号
◆ MIDI 音符号
◆ 压力值

####
Polyphonic Key Pressure Messages
Polyphonic Key Pressure messages respond to pressure changes that are applied to the individual keys of a keyboard. That’s to say that a suitably equipped instrument can transmit or respond to individual pressure messages for each key that’s depressed (Figure 2.16). How a device responds to these messages will often vary from manufacturer to manufacturer (or can be assigned by the user); however, pressure values are commonly assigned to such performance parameters as vibrato, loudness, timbre, and pitch. Although controllers that are capable of producing poly- phonic pressure are generally more expensive, it’s not uncommon for an instrument to respond to these messages.

Figure 2.14. Channel Pressure messages simultaneously affect all notes that are being transmitted over a MIDI channel.

Figure 2.15. Byte structure of a MIDI Channel Pressure message.

Figure 2.16. Individual Polyphonic Key Pressure messages are generated when additional pressure is applied to each key that’s played.

Figure 2.17. Byte structure of a MIDI Polyphonic Key Pressure message.

A Polyphonic Key Pressure message consists of 3 bytes of information (Figure 2.17):
◆ Polyphonic key pressure status/MIDI channel number
◆ MIDI note number
◆ Pressure value

####
复音键压信息
复音键压信息响应施加到键盘各个键上的压力变化。也就是说，适当装备的乐器可以传输或响应每个按下的键的单独压力信息（图 2.16）。设备对这些信息的响应方式通常因制造商而异（或可由用户指定）；但是，压力值通常分配给诸如颤音、响度、音色和音高等性能参数。虽然能够产生复音压力的控制器通常更昂贵，但乐器响应这些消息并不罕见。

图 2.14。通道压力信息同时影响通过 MIDI 通道传输的所有音符。

图 2.15。MIDI 通道压力信息的字节结构。

图 2.16。当对弹奏的每个键施加额外压力时，会生成单独的复音键压信息。

图 2.17。 MIDI 复音键压消息的字节结构。

复音键压消息由 3 个字节的信息组成（图 2.17）：
◆ 复音键压状态/MIDI 通道号
◆ MIDI 音符号
◆ 压力值

####
Program Change Messages
Program Change messages are used to change the active program or preset number of a MIDI instrument or device. A preset is a user- or factory-defined number that actively selects a specific sound patch or system setup. Using this extremely handy message, up to 128 presets can be remotely selected from another device or controller; for example:
◆ A Program Change message can be transmitted from a remote keyboard or controller to an instrument, allowing sound patches to be remotely switched (Figures 2.18 and 2.19).

Figure 2.18. Program Change messages can be used to change sound patches from a sequencer or from a remote controller.

Figure 2.19.Workstations and sequencer software systems will often allow patches to be recalled via Program Change messages. (Courtesy of Steinberg Media Technologies GmbH, A Division of Yamaha Corporation, www.steinberg.net, and Digidesign, A Division of Avid Technology, www.digidesign.com.)

◆ Program Change messages could be programmed at the beginning of a sequence to instruct the various instruments or voice generators to set to the correct sound patch before playing.
◆ A Program Change message could be used to alter patches on an effects device, either in the studio or on stage.
◆ The list goes on …
A Program Change message (Figure 2.20) consists of 2 bytes of information:
◆ Program change status/MIDI channel number (1–16)
◆ Program ID number (0–127)

####
程序变更消息
程序变更消息用于更改 MIDI 乐器或设备的活动程序或预设编号。预设是用户或工厂定义的编号，用于主动选择特定的声音补丁或系统设置。使用此极其方便的消息，可以从另一个设备或控制器远程选择最多 128 个预设；例如：
◆ 程序变更消息可以从远程键盘或控制器传输到乐器，允许远程切换声音补丁（图 2.18 和 2.19）。

图 2.18。程序变更消息可用于从音序器或远程控制器更改声音补丁。

图 2.19。工作站和音序器软件系统通常允许通过程序变更消息调用补丁。 （感谢雅马哈公司旗下的 Steinberg Media Technologies GmbH 公司，www.steinberg.net，以及 Avid Technology 旗下的 Digidesign 公司，www.digidesign.com。）

◆ 可以在序列开始时对程序变更消息进行编程，以指示各种乐器或语音发生器在播放之前设置正确的声音补丁。
◆ 程序变更消息可用于更改效果设备上的补丁，无论是在工作室还是在舞台上。
◆ 列表继续……
程序变更消息（图 2.20）由 2 个字节的信息组成：
◆ 程序变更状态/MIDI 通道号（1-16）
◆ 程序 ID 号（0-127）
